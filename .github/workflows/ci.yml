name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: labo03_db
          MYSQL_USER: labo03
          MYSQL_PASSWORD: labo03
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping || exit 1"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=20

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f src/requirements.txt ]; then pip install -r src/requirements.txt; fi

      - name: Create .env for tests
        run: |
          cat <<EOF > .env
          DB_HOST=127.0.0.1
          DB_PORT=3306
          DB_NAME=labo03_db
          DB_USER=labo03
          DB_PASS=labo03
          REDIS_HOST=127.0.0.1
          REDIS_PORT=6379
          REDIS_DB=0
          EOF

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..60}; do
            if mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; then
              echo "MySQL is up"; break
            fi
            echo "Waiting MySQL... ($i)"; sleep 2
          done

      - name: Run tests
        # adapte si tes tests sont Ã  la racine
        working-directory: src
        run: |
          export PYTHONPATH="${PYTHONPATH}:$(pwd)"
          pytest -q
